[{"/Users/pan/it-kamasutra/cards/src/index.tsx":"1","/Users/pan/it-kamasutra/cards/src/reportWebVitals.ts":"2","/Users/pan/it-kamasutra/cards/src/App.tsx":"3","/Users/pan/it-kamasutra/cards/src/features/counter/Counter.tsx":"4","/Users/pan/it-kamasutra/cards/src/features/counter/counterSlice.ts":"5","/Users/pan/it-kamasutra/cards/src/app/hooks.ts":"6","/Users/pan/it-kamasutra/cards/src/features/counter/counterAPI.ts":"7","/Users/pan/it-kamasutra/cards/src/features/packs/Packs.tsx":"8","/Users/pan/it-kamasutra/cards/src/features/login/Login.tsx":"9","/Users/pan/it-kamasutra/cards/src/features/check-email/CheckEmail.tsx":"10","/Users/pan/it-kamasutra/cards/src/features/learn/Learn.tsx":"11","/Users/pan/it-kamasutra/cards/src/features/profile/Profile.tsx":"12","/Users/pan/it-kamasutra/cards/src/features/set-new-password/SetNewPassword.tsx":"13","/Users/pan/it-kamasutra/cards/src/features/register/Register.tsx":"14","/Users/pan/it-kamasutra/cards/src/features/forgot-password/ForgotPassword.tsx":"15","/Users/pan/it-kamasutra/cards/src/common/api/common.api.ts":"16","/Users/pan/it-kamasutra/cards/src/app/store.ts":"17","/Users/pan/it-kamasutra/cards/src/routes/routes.tsx":"18","/Users/pan/it-kamasutra/cards/src/components/Header/Header.tsx":"19","/Users/pan/it-kamasutra/cards/src/features/app/appSlice.ts":"20","/Users/pan/it-kamasutra/cards/src/features/auth/authSlice.ts":"21","/Users/pan/it-kamasutra/cards/src/features/auth/authApi.ts":"22","/Users/pan/it-kamasutra/cards/src/common/utils/create-app-async-thunk.ts":"23","/Users/pan/it-kamasutra/cards/src/common/error-page/ErrorPage.tsx":"24","/Users/pan/it-kamasutra/cards/src/features/app/ProgressBar/ProgressBar.tsx":"25","/Users/pan/it-kamasutra/cards/src/common/c1-SuperInputText/SuperInputText.tsx":"26","/Users/pan/it-kamasutra/cards/src/common/c2-SuperButton/SuperButton.tsx":"27","/Users/pan/it-kamasutra/cards/src/common/SuperButton.tsx":"28","/Users/pan/it-kamasutra/cards/src/common/EditableSpan/EditableSpan.tsx":"29"},{"size":805,"mtime":1685369816654,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1685106009445,"results":"32","hashOfConfig":"31"},{"size":749,"mtime":1685447391301,"results":"33","hashOfConfig":"31"},{"size":1609,"mtime":1685203860801,"results":"34","hashOfConfig":"31"},{"size":3086,"mtime":1685190224535,"results":"35","hashOfConfig":"31"},{"size":352,"mtime":1685190224560,"results":"36","hashOfConfig":"31"},{"size":207,"mtime":1685106009387,"results":"37","hashOfConfig":"31"},{"size":408,"mtime":1685447073583,"results":"38","hashOfConfig":"31"},{"size":3316,"mtime":1685446692954,"results":"39","hashOfConfig":"31"},{"size":64,"mtime":1685106670438,"results":"40","hashOfConfig":"31"},{"size":53,"mtime":1685106706943,"results":"41","hashOfConfig":"31"},{"size":2747,"mtime":1685448653013,"results":"42","hashOfConfig":"31"},{"size":69,"mtime":1685106767053,"results":"43","hashOfConfig":"31"},{"size":450,"mtime":1685251698544,"results":"44","hashOfConfig":"31"},{"size":73,"mtime":1685108772396,"results":"45","hashOfConfig":"31"},{"size":235,"mtime":1685123293747,"results":"46","hashOfConfig":"31"},{"size":873,"mtime":1685434003326,"results":"47","hashOfConfig":"31"},{"size":1681,"mtime":1685351311762,"results":"48","hashOfConfig":"31"},{"size":896,"mtime":1685447673200,"results":"49","hashOfConfig":"31"},{"size":552,"mtime":1685447673191,"results":"50","hashOfConfig":"31"},{"size":3399,"mtime":1685448161754,"results":"51","hashOfConfig":"31"},{"size":1466,"mtime":1685443647707,"results":"52","hashOfConfig":"31"},{"size":282,"mtime":1685259060505,"results":"53","hashOfConfig":"31"},{"size":492,"mtime":1685265472496,"results":"54","hashOfConfig":"31"},{"size":536,"mtime":1685370417581,"results":"55","hashOfConfig":"31"},{"size":2774,"mtime":1676034724276,"results":"56","hashOfConfig":"31"},{"size":1254,"mtime":1677151166723,"results":"57","hashOfConfig":"31"},{"size":2809,"mtime":1685384167976,"results":"58","hashOfConfig":"31"},{"size":1307,"mtime":1685446507535,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1wiwirx",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"63"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"63"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"63"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"/Users/pan/it-kamasutra/cards/src/index.tsx",[],[],[],"/Users/pan/it-kamasutra/cards/src/reportWebVitals.ts",[],[],"/Users/pan/it-kamasutra/cards/src/App.tsx",["157","158","159","160"],[],"import React, { useEffect } from \"react\";\nimport { RouterProvider, useNavigate } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { appActions } from \"features/app/appSlice\";\nimport { router } from \"routes/routes\";\nimport { Header } from \"components/Header/Header\";\nimport s from \"./App.module.css\";\nimport { authThunks } from \"features/auth/authSlice\";\nimport { RootState } from \"app/store\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(authThunks.isAuthTC());\n  }, []);\n\n  return (\n    <div className={s.appWrapper}>\n      <Header />\n      <div className={s.main}>\n        <RouterProvider router={router} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/pan/it-kamasutra/cards/src/features/counter/Counter.tsx",["161","162"],[],"import React, { useEffect, useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from \"./counterSlice\";\nimport styles from \"./Counter.module.css\";\nimport { AuthApi } from \"features/auth/auth.api\";\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n",[],"/Users/pan/it-kamasutra/cards/src/features/counter/counterSlice.ts",[],[],"/Users/pan/it-kamasutra/cards/src/app/hooks.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/counter/counterAPI.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/packs/Packs.tsx",["163"],[],"import { useAppSelector } from \"app/hooks\";\nimport { RootState } from \"app/store\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Packs = () => {\n  const isAuth = useAppSelector((state: RootState) => state.auth.isAuth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isAuth) navigate(\"/login\");\n  }, [isAuth]);\n\n  return <div>PACKS</div>;\n};\n","/Users/pan/it-kamasutra/cards/src/features/login/Login.tsx",["164","165","166"],[],"import React, { useEffect } from \"react\";\nimport c from \"features/login/Login.module.scss\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { authThunks } from \"features/auth/authSlice\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { RootState } from \"app/store\";\n\ntype Inputs = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n  multipleErrorInput: string;\n};\n\nexport const Login = () => {\n  const isLoggedIn = useAppSelector((state) => state.auth.isLoggedIn);\n  const isAuth = useAppSelector((state: RootState) => state.auth.isAuth);\n\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>({ criteriaMode: \"all\" });\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n  const navigate = useNavigate();\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\n    dispatch(\n      authThunks.login({\n        email: data.email,\n        password: data.password,\n        rememberMe: data.rememberMe,\n      })\n    );\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      navigate(\"/profile\");\n    }\n  }, [isAuth]);\n\n  return (\n    <div className={c.container}>\n      <div className={c.loginForm}>\n        <form onSubmit={handleSubmit(onSubmit)} className={c.formWrapper}>\n          <h1>Форма логина</h1>\n          <input\n            {...register(\"email\", {\n              required: \"Ввод почты обязателен (ваша почта)\",\n              pattern: {\n                value: emailRegex,\n                message: \"Некорректный формат почты\",\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 символов\",\n              },\n            })}\n          />\n\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) => {\n              return messages\n                ? Object.entries(messages).map(([type, message]) => (\n                    <p key={type}>{message}</p>\n                  ))\n                : null;\n            }}\n          />\n\n          <input\n            type=\"password\"\n            {...register(\"password\", {\n              required: \"Ввод пароля обязателен\",\n              // pattern: {\n              //     value: /\\d+/,\n              //     message: 'This input is number only.'\n              // },\n              minLength: {\n                value: 5,\n                message: \"Минимум 5 символов\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Максимум 20 символов\",\n              },\n            })}\n          />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) => {\n              return messages\n                ? Object.entries(messages).map(([type, message]) => (\n                    <p key={type}>{message}</p>\n                  ))\n                : null;\n            }}\n          />\n          <label htmlFor=\"rememberMe\">Remember me</label>\n          <input id=\"rememberMe\" type=\"checkbox\" {...register(\"rememberMe\")} />\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/features/check-email/CheckEmail.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/learn/Learn.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/profile/Profile.tsx",["167","168","169"],[],"/Users/pan/it-kamasutra/cards/src/features/set-new-password/SetNewPassword.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/register/Register.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/forgot-password/ForgotPassword.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/common/api/common.api.ts",[],[],"/Users/pan/it-kamasutra/cards/src/app/store.ts",[],[],"/Users/pan/it-kamasutra/cards/src/routes/routes.tsx",["170"],[],"import React from \"react\";\nimport { createBrowserRouter, createHashRouter } from \"react-router-dom\";\nimport { Profile } from \"features/profile/Profile\";\nimport ErrorPage from \"common/error-page/ErrorPage\";\nimport { Login } from \"features/login/Login\";\nimport { Register } from \"features/register/Register\";\nimport { CheckEmail } from \"features/check-email/CheckEmail\";\nimport { SetNewPassword } from \"features/set-new-password/SetNewPassword\";\nimport { ForgotPassword } from \"features/forgot-password/ForgotPassword\";\nimport { Packs } from \"features/packs/Packs\";\nimport { Learn } from \"features/learn/Learn\";\n\nexport enum RouteNames {\n  START_PAGE = \"/\",\n  LOGIN = \"/login\",\n  REGISTER = \"/register\",\n  CHECK_EMAIL = \"/check-email\",\n  NEW_PASSWORD = \"/set-new-password\",\n  FORGOT_PASSWORD = \"/forgot-password\",\n  PROFILE = \"/profile\",\n  PACKS = \"/packs\",\n  LEARN = \"/learn\",\n}\n\nexport const router = createBrowserRouter([\n  //createBrowserRouter\n  //createHashRouter  if use GitHub pages\n  {\n    path: RouteNames.START_PAGE,\n    element: <Packs />, //скорректировать на Packs?\n    errorElement: <ErrorPage />,\n  },\n  {\n    path: RouteNames.PROFILE,\n    element: <Profile />,\n  },\n  {\n    path: RouteNames.LOGIN,\n    element: <Login />,\n  },\n  {\n    path: RouteNames.REGISTER,\n    element: <Register />,\n  },\n  {\n    path: RouteNames.CHECK_EMAIL,\n    element: <CheckEmail />,\n  },\n  {\n    path: RouteNames.NEW_PASSWORD,\n    element: <SetNewPassword />,\n  },\n  {\n    path: RouteNames.FORGOT_PASSWORD,\n    element: <ForgotPassword />,\n  },\n  {\n    path: RouteNames.PACKS,\n    element: <Packs />,\n  },\n  {\n    path: RouteNames.LEARN,\n    element: <Learn />,\n  },\n]);\n","/Users/pan/it-kamasutra/cards/src/components/Header/Header.tsx",["171"],[],"import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { RootState } from \"app/store\";\nimport s from \"./Header.module.css\";\nimport { ProgressBar } from \"features/app/ProgressBar/ProgressBar\";\n\nexport const Header = () => {\n  const isLoading = useAppSelector<boolean>((state: RootState) => state.app.isLoading);\n\n  return (\n    <>\n      <div className={s.header} id=\"header\">\n        <div className={`container ${s.headerContainer}`}>\n          <div>\n            <h1>Cards</h1>\n          </div>\n          <div className={s.actions}>\n            <button> to smth</button>\n            <span>nick</span>\n            <img src=\"#\" alt=\"logo\" />\n          </div>\n        </div>\n        {isLoading && <ProgressBar />}\n      </div>\n    </>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/features/app/appSlice.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/auth/authSlice.ts",["172","173"],[],"/Users/pan/it-kamasutra/cards/src/features/auth/authApi.ts",[],[],"/Users/pan/it-kamasutra/cards/src/common/utils/create-app-async-thunk.ts",[],[],"/Users/pan/it-kamasutra/cards/src/common/error-page/ErrorPage.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/app/ProgressBar/ProgressBar.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/common/c1-SuperInputText/SuperInputText.tsx",[],[],[],"/Users/pan/it-kamasutra/cards/src/common/c2-SuperButton/SuperButton.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/common/SuperButton.tsx",["174"],[],"import Button from \"@mui/material/Button\";\nimport { Navigate, useLocation, useNavigate } from \"react-router-dom\";\nimport React, { ReactNode } from \"react\";\n\n// EXAMPLE CALL with PROPS ===============\n\n//import LogoutIcon from \"@mui/icons-material/Logout\";\n\n// <MuiButton\n//   redirectPath={\"/packs\"}   // optional Link To\n//   onClickCallBack={onClickHandler} // optional callback\n//   name={\"LOGOUT\"} // optional name\n//   startIcon={<Icon />} // optional Icon (startIcon / endIcon)\n//   width={\"127px\"} // optional\n//   height={\"36px\"} // optional\n//   borderRadius={\"10px\"} // optional\n//   color={\"inherit\"} // optional\n// />\n\n// =============================================\n\ntype ButtonPropsType = {\n  name: string;\n  redirectPath?: string;\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"success\" | \"error\" | \"info\" | \"warning\";\n  startIcon?: ReactNode;\n  endIcon?: ReactNode;\n  width?: string;\n  height?: string;\n  borderRadius?: string;\n  onClickCallBack?: () => void;\n};\n\nexport const SuperButton = (props: ButtonPropsType) => {\n  const {\n    name,\n    color,\n    redirectPath,\n    startIcon,\n    endIcon,\n    width,\n    height,\n    borderRadius,\n    onClickCallBack,\n  } = props;\n\n  const location = useLocation();\n  const isActive = (route: string | undefined) => {\n    if (route) {\n      return route === location.pathname;\n    }\n    // роут из пропсов === текущему пути URL на котором находимся\n    // для подкрашивания кнопки в стиль \"contained\"\n  };\n\n  const handleClick = () => {\n    //осуществляет вызов колбэка и переход на страницу если есть redirect в props\n    if (onClickCallBack) {\n      onClickCallBack();\n    }\n    if (redirectPath) {\n      return <Navigate to={redirectPath} />; // format props : \"/path\"\n    }\n  };\n\n  return (\n    <Button\n      sx={{\n        width: width, //размеры из пропсов : \"60px\" либо стандартные\n        height: height,\n        boxShadow:\n          \"0px 2px 10px rgba(109, 109, 109, 0.25), inset 0px 1px 0px rgba(255, 255, 255, 0.3)\",\n        borderRadius: borderRadius, //из пропсов либо стандартные\n      }}\n      //если размеры не заданы то принимает размер медиум\n      variant={isActive(redirectPath) ? \"contained\" : \"outlined\"}\n      onClick={handleClick} // props: onClickCallBack={onClickHandler}\n      color={color}\n      startIcon={startIcon} // передаем иконку как компоненту в пропсах startIcon={<Icon />}\n      endIcon={endIcon} // // передаем иконку как компоненту в пропсах endIcon={<Icon />}\n    >\n      {name ? name : \"button\"}\n    </Button>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/common/EditableSpan/EditableSpan.tsx",[],[],{"ruleId":"175","severity":1,"message":"176","line":2,"column":26,"nodeType":"177","messageId":"178","endLine":2,"endColumn":37},{"ruleId":"175","severity":1,"message":"179","line":4,"column":10,"nodeType":"177","messageId":"178","endLine":4,"endColumn":20},{"ruleId":"175","severity":1,"message":"180","line":13,"column":9,"nodeType":"177","messageId":"178","endLine":13,"endColumn":15},{"ruleId":"181","severity":1,"message":"182","line":16,"column":6,"nodeType":"183","endLine":16,"endColumn":8,"suggestions":"184"},{"ruleId":"175","severity":1,"message":"185","line":1,"column":17,"nodeType":"177","messageId":"178","endLine":1,"endColumn":26},{"ruleId":"175","severity":1,"message":"186","line":13,"column":10,"nodeType":"177","messageId":"178","endLine":13,"endColumn":17},{"ruleId":"181","severity":1,"message":"187","line":11,"column":6,"nodeType":"183","endLine":11,"endColumn":14,"suggestions":"188"},{"ruleId":"175","severity":1,"message":"189","line":6,"column":10,"nodeType":"177","messageId":"178","endLine":6,"endColumn":18},{"ruleId":"175","severity":1,"message":"190","line":18,"column":9,"nodeType":"177","messageId":"178","endLine":18,"endColumn":19},{"ruleId":"181","severity":1,"message":"187","line":43,"column":6,"nodeType":"183","endLine":43,"endColumn":14,"suggestions":"191"},{"ruleId":"175","severity":1,"message":"189","line":9,"column":10,"nodeType":"177","messageId":"178","endLine":9,"endColumn":18},{"ruleId":"175","severity":1,"message":"192","line":19,"column":9,"nodeType":"177","messageId":"178","endLine":19,"endColumn":18},{"ruleId":"181","severity":1,"message":"187","line":31,"column":6,"nodeType":"183","endLine":31,"endColumn":14,"suggestions":"193"},{"ruleId":"175","severity":1,"message":"194","line":2,"column":31,"nodeType":"177","messageId":"178","endLine":2,"endColumn":47},{"ruleId":"175","severity":1,"message":"195","line":2,"column":10,"nodeType":"177","messageId":"178","endLine":2,"endColumn":24},{"ruleId":"175","severity":1,"message":"196","line":1,"column":23,"nodeType":"177","messageId":"178","endLine":1,"endColumn":36},{"ruleId":"175","severity":1,"message":"197","line":19,"column":11,"nodeType":"177","messageId":"178","endLine":19,"endColumn":14},{"ruleId":"175","severity":1,"message":"176","line":2,"column":33,"nodeType":"177","messageId":"178","endLine":2,"endColumn":44},"@typescript-eslint/no-unused-vars","'useNavigate' is defined but never used.","Identifier","unusedVar","'appActions' is defined but never used.","'isAuth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'useEffect' is defined but never used.","'AuthApi' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["199"],"'Navigate' is defined but never used.","'isLoggedIn' is assigned a value but never used.",["200"],"'resStatus' is assigned a value but never used.",["201"],"'createHashRouter' is defined but never used.","'useAppDispatch' is defined but never used.","'PayloadAction' is defined but never used.","'res' is assigned a value but never used.",{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"204","fix":"206"},{"desc":"204","fix":"207"},"Update the dependencies array to be: [dispatch]",{"range":"208","text":"209"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"210","text":"211"},{"range":"212","text":"211"},{"range":"213","text":"211"},[627,629],"[dispatch]",[366,374],"[isAuth, navigate]",[1219,1227],[1256,1264]]