[{"/Users/pan/it-kamasutra/cards/src/index.tsx":"1","/Users/pan/it-kamasutra/cards/src/reportWebVitals.ts":"2","/Users/pan/it-kamasutra/cards/src/App.tsx":"3","/Users/pan/it-kamasutra/cards/src/features/counter/Counter.tsx":"4","/Users/pan/it-kamasutra/cards/src/features/counter/counterSlice.ts":"5","/Users/pan/it-kamasutra/cards/src/app/hooks.ts":"6","/Users/pan/it-kamasutra/cards/src/features/counter/counterAPI.ts":"7","/Users/pan/it-kamasutra/cards/src/features/packs/Packs.tsx":"8","/Users/pan/it-kamasutra/cards/src/features/login/Login.tsx":"9","/Users/pan/it-kamasutra/cards/src/features/check-email/CheckEmail.tsx":"10","/Users/pan/it-kamasutra/cards/src/features/learn/Learn.tsx":"11","/Users/pan/it-kamasutra/cards/src/features/profile/Profile.tsx":"12","/Users/pan/it-kamasutra/cards/src/features/set-new-password/SetNewPassword.tsx":"13","/Users/pan/it-kamasutra/cards/src/features/register/Register.tsx":"14","/Users/pan/it-kamasutra/cards/src/features/forgot-password/ForgotPassword.tsx":"15","/Users/pan/it-kamasutra/cards/src/common/api/common.api.ts":"16","/Users/pan/it-kamasutra/cards/src/app/store.ts":"17","/Users/pan/it-kamasutra/cards/src/routes/routes.tsx":"18","/Users/pan/it-kamasutra/cards/src/components/Header/Header.tsx":"19","/Users/pan/it-kamasutra/cards/src/features/app/appSlice.ts":"20","/Users/pan/it-kamasutra/cards/src/features/auth/authSlice.ts":"21","/Users/pan/it-kamasutra/cards/src/features/auth/authApi.ts":"22","/Users/pan/it-kamasutra/cards/src/common/utils/create-app-async-thunk.ts":"23","/Users/pan/it-kamasutra/cards/src/common/error-page/ErrorPage.tsx":"24","/Users/pan/it-kamasutra/cards/src/features/app/ProgressBar/ProgressBar.tsx":"25"},{"size":781,"mtime":1685264975101,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1685106009445,"results":"28","hashOfConfig":"27"},{"size":638,"mtime":1685246171531,"results":"29","hashOfConfig":"27"},{"size":1609,"mtime":1685203860801,"results":"30","hashOfConfig":"27"},{"size":3086,"mtime":1685190224535,"results":"31","hashOfConfig":"27"},{"size":352,"mtime":1685190224560,"results":"32","hashOfConfig":"27"},{"size":207,"mtime":1685106009387,"results":"33","hashOfConfig":"27"},{"size":53,"mtime":1685106727914,"results":"34","hashOfConfig":"27"},{"size":3127,"mtime":1685266766334,"results":"35","hashOfConfig":"27"},{"size":64,"mtime":1685106670438,"results":"36","hashOfConfig":"27"},{"size":53,"mtime":1685106706943,"results":"37","hashOfConfig":"27"},{"size":179,"mtime":1685266441605,"results":"38","hashOfConfig":"27"},{"size":69,"mtime":1685106767053,"results":"39","hashOfConfig":"27"},{"size":450,"mtime":1685251698544,"results":"40","hashOfConfig":"27"},{"size":73,"mtime":1685108772396,"results":"41","hashOfConfig":"27"},{"size":235,"mtime":1685123293747,"results":"42","hashOfConfig":"27"},{"size":873,"mtime":1685203526708,"results":"43","hashOfConfig":"27"},{"size":1554,"mtime":1685265472372,"results":"44","hashOfConfig":"27"},{"size":481,"mtime":1685266441329,"results":"45","hashOfConfig":"27"},{"size":995,"mtime":1685118770723,"results":"46","hashOfConfig":"27"},{"size":1527,"mtime":1685259525109,"results":"47","hashOfConfig":"27"},{"size":897,"mtime":1685258566661,"results":"48","hashOfConfig":"27"},{"size":282,"mtime":1685259060505,"results":"49","hashOfConfig":"27"},{"size":492,"mtime":1685265472496,"results":"50","hashOfConfig":"27"},{"size":658,"mtime":1684818086333,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wiwirx",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pan/it-kamasutra/cards/src/index.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/reportWebVitals.ts",[],[],[],"/Users/pan/it-kamasutra/cards/src/App.tsx",["135"],[],"import React, { useEffect } from \"react\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { useAppDispatch } from \"app/hooks\";\nimport { appActions } from \"features/app/appSlice\";\nimport { router } from \"routes/routes\";\nimport { Header } from \"components/Header/Header\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(appActions.setIsLoading({ isLoading: false }));\n    }, 3000);\n  }, []);\n\n  return (\n    <div className=\"\">\n      <Header />\n      <div className=\"\">\n        <RouterProvider router={router} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/pan/it-kamasutra/cards/src/features/counter/Counter.tsx",["136","137"],[],"import React, { useEffect, useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from \"./counterSlice\";\nimport styles from \"./Counter.module.css\";\nimport { AuthApi } from \"features/auth/auth.api\";\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n",[],"/Users/pan/it-kamasutra/cards/src/features/counter/counterSlice.ts",[],[],"/Users/pan/it-kamasutra/cards/src/app/hooks.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/counter/counterAPI.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/packs/Packs.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/login/Login.tsx",["138"],[],"import React from \"react\";\nimport c from \"./Login.module.css\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { authThunks } from \"features/auth/authSlice\";\nimport { useAppDispatch } from \"app/hooks\";\n\ntype Inputs = {\n  login: string;\n  password: string;\n  phone: number;\n  multipleErrorInput: string;\n};\n\nexport const Login = () => {\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>({\n    criteriaMode: \"all\",\n  });\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n\n  const loginHandler = () => {\n    dispatch(\n      authThunks.login({\n        email: \"s1abak38@gmail.com\",\n        password: \"Grebeshok123\",\n        rememberMe: true,\n      })\n    );\n  };\n\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\n    // dispatch(loginTC(data.login, data.password));\n  };\n\n  // if (isAuth) {\n  //   return <Navigate to={\"/basket\"} />;\n  // }\n\n  return (\n    <div className={c.container}>\n      <button onClick={loginHandler}>login</button>\n      <div className={c.loginForm}>\n        <form onSubmit={handleSubmit(onSubmit)} className={c.formWrapper}>\n          <h1>Форма логина</h1>\n          <input\n            {...register(\"login\", {\n              required: \"Ввод почты обязателен (ваша почта)\",\n              pattern: {\n                value: emailRegex,\n                message: \"Некорректный формат почты\",\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 символов\",\n              },\n            })}\n          />\n          {/*<ErrorMessage*/}\n          {/*  errors={errors}*/}\n          {/*  name=\"login\"*/}\n          {/*  render={({ messages }) => {*/}\n          {/*    return messages*/}\n          {/*      ? Object.entries(messages).map(([type, message]) => (*/}\n          {/*          <p key={type}>{message}</p>*/}\n          {/*        ))*/}\n          {/*      : null;*/}\n          {/*  }}*/}\n          {/*/>*/}\n\n          <input\n            type=\"password\"\n            {...register(\"password\", {\n              required: \"Ввод пароля обязателен\",\n              // pattern: {\n              //     value: /\\d+/,\n              //     message: 'This input is number only.'\n              // },\n              minLength: {\n                value: 5,\n                message: \"Минимум 5 символов\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Максимум 20 символов\",\n              },\n            })}\n          />\n          {/*<ErrorMessage*/}\n          {/*  errors={errors}*/}\n          {/*  name=\"password\"*/}\n          {/*  render={({ messages }) => {*/}\n          {/*    return messages*/}\n          {/*      ? Object.entries(messages).map(([type, message]) => (*/}\n          {/*          <p key={type}>{message}</p>*/}\n          {/*        ))*/}\n          {/*      : null;*/}\n          {/*  }}*/}\n          {/*/>*/}\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/features/check-email/CheckEmail.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/learn/Learn.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/profile/Profile.tsx",["139","140","141"],[],"import { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport React, { useEffect } from \"react\";\n\nexport const Profile = () => {\n  return <div className=\"\">PROFILE</div>;\n};\n","/Users/pan/it-kamasutra/cards/src/features/set-new-password/SetNewPassword.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/register/Register.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/forgot-password/ForgotPassword.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/common/api/common.api.ts",[],[],"/Users/pan/it-kamasutra/cards/src/app/store.ts",[],[],"/Users/pan/it-kamasutra/cards/src/routes/routes.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/components/Header/Header.tsx",["142"],[],"import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { RootState } from \"app/store\";\nimport s from \"./Header.module.css\";\nimport { ProgressBar } from \"features/app/ProgressBar/ProgressBar\";\n\nexport const Header = () => {\n  const isLoading = useAppSelector<boolean>(\n    (state: RootState) => state.app.isLoading\n  );\n\n  return (\n    <div className={s.header}>\n      <div>Header</div>\n      {isLoading && <ProgressBar />}\n    </div>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/features/app/appSlice.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/auth/authSlice.ts",["143","144","145","146","147"],[],"import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport {\n  authApi,\n  LoginPayloadType,\n  ProfileResponseType,\n  RegPayloadType,\n} from \"features/auth/authApi\";\nimport { AppDispatch, RootState } from \"app/store\";\nimport { createAppAsyncThunk } from \"common/utils/create-app-async-thunk\";\n\nconst register = createAppAsyncThunk(\n  \"auth/register\",\n  async (arg: RegPayloadType, thunkAPI) => {\n    const res = await authApi.register(arg);\n  }\n);\n\nconst login = createAppAsyncThunk<\n  { profile: ProfileResponseType }, //return type\n  LoginPayloadType // payload type\n>(\"auth/login\", async (arg) => {\n  const res = await authApi.login(arg);\n  return { profile: res.data };\n  // возвращаем данные из санки, упаковываем в объект, используем в extraReducers\n});\n\nconst slice = createSlice({\n  name: \"auth\",\n  initialState: {\n    profile: null as ProfileResponseType | null,\n  },\n  reducers: {\n    // setProfile(state, action: PayloadAction<{ profile: ProfileResponseType }>) {\n    //   state.profile = action.payload.profile;\n    // },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(login.fulfilled, (state, action) => {\n      state.profile = action.payload.profile;\n    });\n  },\n});\n\nexport const authReducer = slice.reducer;\n// export const authActions = slice.actions;\n// Санки давайте упакуем в объект, нам это пригодится в дальнейшем\nexport const authThunks = { register, login };\n","/Users/pan/it-kamasutra/cards/src/features/auth/authApi.ts",[],[],"/Users/pan/it-kamasutra/cards/src/common/utils/create-app-async-thunk.ts",[],[],"/Users/pan/it-kamasutra/cards/src/common/error-page/ErrorPage.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/app/ProgressBar/ProgressBar.tsx",[],[],{"ruleId":"148","severity":1,"message":"149","line":15,"column":6,"nodeType":"150","endLine":15,"endColumn":8,"suggestions":"151"},{"ruleId":"152","severity":1,"message":"153","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"156","line":13,"column":10,"nodeType":"154","messageId":"155","endLine":13,"endColumn":17},{"ruleId":"152","severity":1,"message":"157","line":19,"column":18,"nodeType":"154","messageId":"155","endLine":19,"endColumn":24},{"ruleId":"152","severity":1,"message":"158","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":24},{"ruleId":"152","severity":1,"message":"159","line":1,"column":26,"nodeType":"154","messageId":"155","endLine":1,"endColumn":40},{"ruleId":"152","severity":1,"message":"153","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"152","severity":1,"message":"158","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":24},{"ruleId":"152","severity":1,"message":"160","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"161","line":1,"column":41,"nodeType":"154","messageId":"155","endLine":1,"endColumn":54},{"ruleId":"152","severity":1,"message":"162","line":8,"column":10,"nodeType":"154","messageId":"155","endLine":8,"endColumn":21},{"ruleId":"152","severity":1,"message":"163","line":8,"column":23,"nodeType":"154","messageId":"155","endLine":8,"endColumn":32},{"ruleId":"152","severity":1,"message":"164","line":14,"column":11,"nodeType":"154","messageId":"155","endLine":14,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["165"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'AuthApi' is defined but never used.","'errors' is assigned a value but never used.","'useAppDispatch' is defined but never used.","'useAppSelector' is defined but never used.","'createAsyncThunk' is defined but never used.","'PayloadAction' is defined but never used.","'AppDispatch' is defined but never used.","'RootState' is defined but never used.","'res' is assigned a value but never used.",{"desc":"166","fix":"167"},"Update the dependencies array to be: [dispatch]",{"range":"168","text":"169"},[461,463],"[dispatch]"]