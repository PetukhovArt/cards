[{"/Users/pan/it-kamasutra/cards/src/index.tsx":"1","/Users/pan/it-kamasutra/cards/src/reportWebVitals.ts":"2","/Users/pan/it-kamasutra/cards/src/App.tsx":"3","/Users/pan/it-kamasutra/cards/src/features/counter/Counter.tsx":"4","/Users/pan/it-kamasutra/cards/src/features/counter/counterSlice.ts":"5","/Users/pan/it-kamasutra/cards/src/app/hooks.ts":"6","/Users/pan/it-kamasutra/cards/src/features/counter/counterAPI.ts":"7","/Users/pan/it-kamasutra/cards/src/features/packs/Packs.tsx":"8","/Users/pan/it-kamasutra/cards/src/features/login/Login.tsx":"9","/Users/pan/it-kamasutra/cards/src/features/check-email/CheckEmail.tsx":"10","/Users/pan/it-kamasutra/cards/src/features/learn/Learn.tsx":"11","/Users/pan/it-kamasutra/cards/src/features/profile/Profile.tsx":"12","/Users/pan/it-kamasutra/cards/src/features/set-new-password/SetNewPassword.tsx":"13","/Users/pan/it-kamasutra/cards/src/features/register/Register.tsx":"14","/Users/pan/it-kamasutra/cards/src/features/forgot-password/ForgotPassword.tsx":"15","/Users/pan/it-kamasutra/cards/src/common/api/common.api.ts":"16","/Users/pan/it-kamasutra/cards/src/app/store.ts":"17","/Users/pan/it-kamasutra/cards/src/routes/routes.tsx":"18","/Users/pan/it-kamasutra/cards/src/features/app/appSlice.ts":"19","/Users/pan/it-kamasutra/cards/src/features/auth/authSlice.ts":"20","/Users/pan/it-kamasutra/cards/src/features/auth/authApi.ts":"21","/Users/pan/it-kamasutra/cards/src/common/utils/create-app-async-thunk.ts":"22","/Users/pan/it-kamasutra/cards/src/common/error-page/ErrorPage.tsx":"23","/Users/pan/it-kamasutra/cards/src/features/app/ProgressBar/ProgressBar.tsx":"24","/Users/pan/it-kamasutra/cards/src/common/utils/error-utils.ts":"25","/Users/pan/it-kamasutra/cards/src/features/Header/Header.tsx":"26","/Users/pan/it-kamasutra/cards/src/components/error-snack-bar/ErrorSnackBar.tsx":"27","/Users/pan/it-kamasutra/cards/src/components/super-button/SuperButton.tsx":"28","/Users/pan/it-kamasutra/cards/src/components/EditableSpan/EditableSpan.tsx":"29"},{"size":805,"mtime":1685369816654,"results":"30","hashOfConfig":"31"},{"size":425,"mtime":1685106009445,"results":"32","hashOfConfig":"31"},{"size":725,"mtime":1685520037679,"results":"33","hashOfConfig":"31"},{"size":1609,"mtime":1685203860801,"results":"34","hashOfConfig":"31"},{"size":3086,"mtime":1685190224535,"results":"35","hashOfConfig":"31"},{"size":352,"mtime":1685190224560,"results":"36","hashOfConfig":"31"},{"size":207,"mtime":1685106009387,"results":"37","hashOfConfig":"31"},{"size":408,"mtime":1685447073583,"results":"38","hashOfConfig":"31"},{"size":3224,"mtime":1685520841851,"results":"39","hashOfConfig":"31"},{"size":64,"mtime":1685106670438,"results":"40","hashOfConfig":"31"},{"size":53,"mtime":1685106706943,"results":"41","hashOfConfig":"31"},{"size":2722,"mtime":1685520037690,"results":"42","hashOfConfig":"31"},{"size":69,"mtime":1685106767053,"results":"43","hashOfConfig":"31"},{"size":4130,"mtime":1685520841842,"results":"44","hashOfConfig":"31"},{"size":73,"mtime":1685108772396,"results":"45","hashOfConfig":"31"},{"size":235,"mtime":1685123293747,"results":"46","hashOfConfig":"31"},{"size":873,"mtime":1685434003326,"results":"47","hashOfConfig":"31"},{"size":1681,"mtime":1685351311762,"results":"48","hashOfConfig":"31"},{"size":939,"mtime":1685525947126,"results":"49","hashOfConfig":"31"},{"size":3081,"mtime":1685525955856,"results":"50","hashOfConfig":"31"},{"size":1466,"mtime":1685443647707,"results":"51","hashOfConfig":"31"},{"size":315,"mtime":1685520853247,"results":"52","hashOfConfig":"31"},{"size":492,"mtime":1685265472496,"results":"53","hashOfConfig":"31"},{"size":536,"mtime":1685370417581,"results":"54","hashOfConfig":"31"},{"size":2340,"mtime":1685525609355,"results":"55","hashOfConfig":"31"},{"size":913,"mtime":1685520036185,"results":"56","hashOfConfig":"31"},{"size":1024,"mtime":1685521057597,"results":"57","hashOfConfig":"31"},{"size":2817,"mtime":1685512265206,"results":"58","hashOfConfig":"31"},{"size":1351,"mtime":1685520036173,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"1wiwirx",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"63"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"63"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"63"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"63"},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"63"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pan/it-kamasutra/cards/src/index.tsx",[],[],[],"/Users/pan/it-kamasutra/cards/src/reportWebVitals.ts",[],[],"/Users/pan/it-kamasutra/cards/src/App.tsx",["158"],[],"import React, { useEffect } from \"react\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { useAppDispatch } from \"app/hooks\";\nimport { router } from \"routes/routes\";\nimport { Header } from \"features/Header/Header\";\nimport s from \"./App.module.css\";\nimport { authThunks } from \"features/auth/authSlice\";\nimport { ErrorSnackbar } from \"components/error-snack-bar/ErrorSnackBar\";\n\nfunction App() {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(authThunks.isAuthTC());\n  }, []);\n\n  return (\n    <div className={s.appWrapper}>\n      <ErrorSnackbar />\n      <Header />\n      <div className={s.main}>\n        <RouterProvider router={router} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/pan/it-kamasutra/cards/src/features/counter/Counter.tsx",["159","160"],[],"import React, { useEffect, useState } from \"react\";\n\nimport { useAppSelector, useAppDispatch } from \"../../app/hooks\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n} from \"./counterSlice\";\nimport styles from \"./Counter.module.css\";\nimport { AuthApi } from \"features/auth/auth.api\";\n\nexport function Counter() {\n  const count = useAppSelector(selectCount);\n  const dispatch = useAppDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n",[],"/Users/pan/it-kamasutra/cards/src/features/counter/counterSlice.ts",[],[],"/Users/pan/it-kamasutra/cards/src/app/hooks.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/counter/counterAPI.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/packs/Packs.tsx",["161"],[],"import { useAppSelector } from \"app/hooks\";\nimport { RootState } from \"app/store\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const Packs = () => {\n  const isAuth = useAppSelector((state: RootState) => state.auth.isAuth);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isAuth) navigate(\"/login\");\n  }, [isAuth]);\n\n  return <div>PACKS</div>;\n};\n","/Users/pan/it-kamasutra/cards/src/features/login/Login.tsx",["162"],[],"import React, { useEffect } from \"react\";\nimport c from \"features/login/Login.module.scss\";\nimport { useForm, SubmitHandler } from \"react-hook-form\";\nimport { authThunks } from \"features/auth/authSlice\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport { RootState } from \"app/store\";\n\ntype Inputs = {\n  email: string;\n  password: string;\n  rememberMe: boolean;\n  multipleErrorInput: string;\n};\n\nexport const Login = () => {\n  const isAuth = useAppSelector((state: RootState) => state.auth.isAuth);\n\n  const dispatch = useAppDispatch();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>({ criteriaMode: \"all\" });\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\n    dispatch(\n      authThunks.loginTC({\n        email: data.email,\n        password: data.password,\n        rememberMe: data.rememberMe,\n      })\n    );\n  };\n\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isAuth) {\n      navigate(\"/profile\");\n    }\n  }, [isAuth]);\n\n  return (\n    <div className={c.container}>\n      <div className={c.loginForm}>\n        <form onSubmit={handleSubmit(onSubmit)} className={c.formWrapper}>\n          <h1>Форма логина</h1>\n          <input\n            {...register(\"email\", {\n              required: \"Ввод почты обязателен (ваша почта)\",\n              pattern: {\n                value: emailRegex,\n                message: \"Некорректный формат почты\",\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 символов\",\n              },\n            })}\n          />\n\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) => {\n              return messages\n                ? Object.entries(messages).map(([type, message]) => <p key={type}>{message}</p>)\n                : null;\n            }}\n          />\n\n          <input\n            type=\"password\"\n            {...register(\"password\", {\n              required: \"Ввод пароля обязателен\",\n              // pattern: {\n              //     value: /\\d+/,\n              //     message: 'This input is number only.'\n              // },\n              minLength: {\n                value: 5,\n                message: \"Минимум 5 символов\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Максимум 20 символов\",\n              },\n            })}\n          />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) => {\n              return messages\n                ? Object.entries(messages).map(([type, message]) => <p key={type}>{message}</p>)\n                : null;\n            }}\n          />\n          <label htmlFor=\"rememberMe\">Remember me</label>\n          <input id=\"rememberMe\" type=\"checkbox\" {...register(\"rememberMe\")} />\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/features/check-email/CheckEmail.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/learn/Learn.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/profile/Profile.tsx",["163","164","165"],[],"import React, { useEffect } from \"react\";\nimport s from \"features/profile/Profile.module.scss\";\nimport { SuperButton } from \"common/SuperButton\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport { RootState } from \"app/store\";\nimport ava from \"assets/images/ava.png\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { authThunks } from \"features/auth/authSlice\";\nimport { EditableSpan } from \"common/EditableSpan/EditableSpan\";\nimport { IconButton } from \"@mui/material\";\nimport AddAPhotoIcon from \"@mui/icons-material/AddAPhoto\";\n\nexport const Profile = () => {\n  const dispatch = useAppDispatch();\n  const { profile, isAuth } = useAppSelector((state: RootState) => state.auth);\n  const resStatus = useAppSelector((state: RootState) => state.app.resStatus);\n\n  const onClickLogoutHandler = () => {\n    dispatch(authThunks.logoutTC());\n  };\n  const onChangeNameHandler = (name: string) => {\n    dispatch(authThunks.updateUserTC({ name }));\n  };\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!isAuth) navigate(\"/login\");\n  }, [isAuth]);\n\n  return (\n    <div className={s.profileBlock} id=\"profile\">\n      <div className={s.headActions}>\n        <SuperButton\n          name={\"Back to Packs\"}\n          redirectPath={\"/packs\"}\n          startIcon={<ArrowBackIcon />}\n          color={\"primary\"}\n        />\n      </div>\n      <div className={`container ${s.profileContainer}`}>\n        <div className={s.profile}>\n          <h2>Personal Information</h2>\n          <div className={s.info}>\n            <div className={s.avatarBlock}>\n              <img\n                className={s.avatar}\n                src={profile && profile.avatar ? profile.avatar : ava}\n                alt=\"userAva\"\n              />\n              <IconButton className={s.photoIcon} aria-label=\"change photo\">\n                <AddAPhotoIcon />\n              </IconButton>\n            </div>\n            <EditableSpan\n              value={profile ? profile.name : \"User name\"}\n              onChange={onChangeNameHandler}\n              // disabled={props.taskEntityStatus === 'loading'}\n              disabled={false}\n            />\n            <span style={{ opacity: 0.5 }}>\n              {profile ? profile.email : \"example@mail.com\"}\n            </span>\n          </div>\n          <SuperButton\n            onClickCallBack={onClickLogoutHandler}\n            name={\"Logout\"}\n            startIcon={<LogoutIcon />}\n            width={\"127px\"}\n            height={\"36px\"}\n            borderRadius={\"10px\"}\n            color={\"primary\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/features/set-new-password/SetNewPassword.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/register/Register.tsx",["166","167","168"],[],"import { useAppDispatch } from \"app/hooks\";\nimport { authThunks } from \"features/auth/authSlice\";\nimport { useNavigate } from \"react-router-dom\";\nimport { SubmitHandler, useForm } from \"react-hook-form\";\nimport c from \"features/login/Login.module.scss\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport React from \"react\";\n\ntype Inputs = {\n  email: string;\n  password: string;\n  confirm: string;\n  multipleErrorInput: string;\n};\n\nexport const Register = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  const regexPassword = /[A-Za-z0-9]{8,}/;\n  const regexEmail = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i;\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<Inputs>({ criteriaMode: \"all\" });\n  const emailRegex = /^\\S+@\\S+\\.\\S+$/;\n  const onSubmit: SubmitHandler<Inputs> = (data) => {\n    dispatch(authThunks.registerTC({ email: \"s1abak38@gmail.com\", password: \"Grebeshok123\" }));\n    // dispatch(\n    //   authThunks.login({\n    //     email: data.email,\n    //     password: data.password,\n    //     confirm: data.confirm,\n    //   })\n    // );\n  };\n\n  return (\n    <div className={c.container}>\n      <div className={c.loginForm}>\n        <form onSubmit={handleSubmit(onSubmit)} className={c.formWrapper}>\n          <h1>Регистрация</h1>\n          <input\n            {...register(\"email\", {\n              required: \"Ввод почты обязателен (ваша почта)\",\n              pattern: {\n                value: emailRegex,\n                message: \"Некорректный формат почты\",\n              },\n              maxLength: {\n                value: 50,\n                message: \"Максимум 50 символов\",\n              },\n            })}\n          />\n\n          <ErrorMessage\n            errors={errors}\n            name=\"email\"\n            render={({ messages }) => {\n              return messages\n                ? Object.entries(messages).map(([type, message]) => <p key={type}>{message}</p>)\n                : null;\n            }}\n          />\n\n          <input\n            type=\"password\"\n            {...register(\"password\", {\n              required: \"Ввод пароля обязателен\",\n              // pattern: {\n              //     value: /\\d+/,\n              //     message: 'This input is number only.'\n              // },\n              minLength: {\n                value: 5,\n                message: \"Минимум 5 символов\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Максимум 20 символов\",\n              },\n            })}\n          />\n          <ErrorMessage\n            errors={errors}\n            name=\"password\"\n            render={({ messages }) => {\n              return messages\n                ? Object.entries(messages).map(([type, message]) => <p key={type}>{message}</p>)\n                : null;\n            }}\n          />\n          {/*<label htmlFor=\"rememberMe\">Remember me</label>*/}\n          {/*<input id=\"rememberMe\" type=\"checkbox\" {...register(\"rememberMe\")} />*/}\n\n          <input\n            type=\"password\"\n            {...register(\"confirm\", {\n              required: \"Подтверждение пароля обязательно\",\n              // pattern: {\n              //     value: /\\d+/,\n              //     message: 'This input is number only.'\n              // },\n              minLength: {\n                value: 5,\n                message: \"Минимум 5 символов\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"Максимум 20 символов\",\n              },\n            })}\n          />\n          <ErrorMessage\n            errors={errors}\n            name=\"confirm\"\n            render={({ messages }) => {\n              return messages\n                ? Object.entries(messages).map(([type, message]) => <p key={type}>{message}</p>)\n                : null;\n            }}\n          />\n\n          <input type=\"submit\" />\n        </form>\n      </div>\n    </div>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/features/forgot-password/ForgotPassword.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/common/api/common.api.ts",[],[],"/Users/pan/it-kamasutra/cards/src/app/store.ts",[],[],"/Users/pan/it-kamasutra/cards/src/routes/routes.tsx",["169"],[],"import React from \"react\";\nimport { createBrowserRouter, createHashRouter } from \"react-router-dom\";\nimport { Profile } from \"features/profile/Profile\";\nimport ErrorPage from \"common/error-page/ErrorPage\";\nimport { Login } from \"features/login/Login\";\nimport { Register } from \"features/register/Register\";\nimport { CheckEmail } from \"features/check-email/CheckEmail\";\nimport { SetNewPassword } from \"features/set-new-password/SetNewPassword\";\nimport { ForgotPassword } from \"features/forgot-password/ForgotPassword\";\nimport { Packs } from \"features/packs/Packs\";\nimport { Learn } from \"features/learn/Learn\";\n\nexport enum RouteNames {\n  START_PAGE = \"/\",\n  LOGIN = \"/login\",\n  REGISTER = \"/register\",\n  CHECK_EMAIL = \"/check-email\",\n  NEW_PASSWORD = \"/set-new-password\",\n  FORGOT_PASSWORD = \"/forgot-password\",\n  PROFILE = \"/profile\",\n  PACKS = \"/packs\",\n  LEARN = \"/learn\",\n}\n\nexport const router = createBrowserRouter([\n  //createBrowserRouter\n  //createHashRouter  if use GitHub pages\n  {\n    path: RouteNames.START_PAGE,\n    element: <Packs />, //скорректировать на Packs?\n    errorElement: <ErrorPage />,\n  },\n  {\n    path: RouteNames.PROFILE,\n    element: <Profile />,\n  },\n  {\n    path: RouteNames.LOGIN,\n    element: <Login />,\n  },\n  {\n    path: RouteNames.REGISTER,\n    element: <Register />,\n  },\n  {\n    path: RouteNames.CHECK_EMAIL,\n    element: <CheckEmail />,\n  },\n  {\n    path: RouteNames.NEW_PASSWORD,\n    element: <SetNewPassword />,\n  },\n  {\n    path: RouteNames.FORGOT_PASSWORD,\n    element: <ForgotPassword />,\n  },\n  {\n    path: RouteNames.PACKS,\n    element: <Packs />,\n  },\n  {\n    path: RouteNames.LEARN,\n    element: <Learn />,\n  },\n]);\n","/Users/pan/it-kamasutra/cards/src/features/app/appSlice.ts",[],[],"/Users/pan/it-kamasutra/cards/src/features/auth/authSlice.ts",["170","171","172","173","174","175"],[],"/Users/pan/it-kamasutra/cards/src/features/auth/authApi.ts",[],[],"/Users/pan/it-kamasutra/cards/src/common/utils/create-app-async-thunk.ts",[],[],"/Users/pan/it-kamasutra/cards/src/common/error-page/ErrorPage.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/features/app/ProgressBar/ProgressBar.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/common/utils/error-utils.ts",["176","177","178"],[],"import { Dispatch } from \"redux\";\nimport axios, { AxiosError } from \"axios\";\n\n// export const errorUtils = (e: Error | AxiosError<{ error: string }>, dispatch: Dispatch<any>) => {\n\nexport function errorUtils(e: AxiosError<{ error: string }>) {\n  if (e && e.response && e.response.data && e.response.data.error) {\n    return e.response.data.error;\n  } else return \"Неизвестная ошибка\";\n  return null;\n}\n\n// https://github.com/axios/axios/issues/3612\n// 1. then/catch\n// 1 ver\n// const deletePackTC1 =\n//   (packId: string): AppThunk =>\n//   (dispatch) => {\n//     packsAPI\n//       .deletePack(packId)\n//       .then(() => {\n//         // code\n//       })\n//       .catch((err: AxiosError<{ error: string }>) => {\n//         const error = err.response ? err.response.data.error : err.message;\n//         console.log(\"error: \", error);\n//       });\n//   };\n// // 2 ver\n// const deletePackTC2 =\n//   (packId: string): AppThunk =>\n//   (dispatch) => {\n//     packsAPI\n//       .deletePack(packId)\n//       .then(() => {\n//         // code\n//       })\n//       .catch((err: AxiosError) => {\n//         const error = err.response\n//           ? (err.response.data as { error: string }).error\n//           : err.message;\n//         console.log(\"error: \", error);\n//       });\n//   };\n//\n// // 2. try/catch\n// // 1 ver\n// export const deletePackTC3 =\n//   (packId: string): AppThunk =>\n//   async (dispatch) => {\n//     try {\n//       // code\n//     } catch (e) {\n//       const err = e as Error | AxiosError<{ error: string }>;\n//       if (axios.isAxiosError(err)) {\n//         const error = err.response?.data ? err.response.data.error : err.message;\n//         dispatch(setAppErrorAC(error));\n//       } else {\n//         dispatch(setAppErrorAC(`Native error ${err.message}`));\n//       }\n//     }\n//   };\n//\n// // 2 ver\n// export const deletePackTC4 =\n//   (packId: string): AppThunk =>\n//   async (dispatch) => {\n//     try {\n//       // code\n//     } catch (e) {\n//       const err = e as Error | AxiosError;\n//       if (axios.isAxiosError(err)) {\n//         const error = err.response?.data\n//           ? (err.response.data as { error: string }).error\n//           : err.message;\n//         dispatch(setAppErrorAC(error));\n//       } else {\n//         dispatch(setAppErrorAC(`Native error ${err.message}`));\n//       }\n//     }\n//   };\n","/Users/pan/it-kamasutra/cards/src/features/Header/Header.tsx",["179","180"],[],"import React from \"react\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { RootState } from \"app/store\";\nimport s from \"features/Header/Header.module.scss\";\nimport { ProgressBar } from \"features/app/ProgressBar/ProgressBar\";\nimport { isLoadingType } from \"features/app/appSlice\";\n\nexport const Header = () => {\n  const dispatch = useAppDispatch();\n  const resStatus = useAppSelector<isLoadingType>((state) => state.app.resStatus);\n\n  return (\n    <>\n      <div className={s.header} id=\"header\">\n        <div className={`container ${s.headerContainer}`}>\n          <div>\n            <h1>Cards</h1>\n          </div>\n          <div className={s.actions}>\n            <button> to smth</button>\n            <span>nick</span>\n            <img src=\"src/features/Header#\" alt=\"logo\" />\n          </div>\n        </div>\n        {resStatus === \"loading\" && <ProgressBar />}\n      </div>\n    </>\n  );\n};\n","/Users/pan/it-kamasutra/cards/src/components/error-snack-bar/ErrorSnackBar.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/components/super-button/SuperButton.tsx",[],[],"/Users/pan/it-kamasutra/cards/src/components/EditableSpan/EditableSpan.tsx",[],[],{"ruleId":"181","severity":1,"message":"182","line":15,"column":6,"nodeType":"183","endLine":15,"endColumn":8,"suggestions":"184"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":26},{"ruleId":"185","severity":1,"message":"189","line":13,"column":10,"nodeType":"187","messageId":"188","endLine":13,"endColumn":17},{"ruleId":"181","severity":1,"message":"190","line":11,"column":6,"nodeType":"183","endLine":11,"endColumn":14,"suggestions":"191"},{"ruleId":"181","severity":1,"message":"190","line":42,"column":6,"nodeType":"183","endLine":42,"endColumn":14,"suggestions":"192"},{"ruleId":"185","severity":1,"message":"193","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":18},{"ruleId":"185","severity":1,"message":"194","line":18,"column":9,"nodeType":"187","messageId":"188","endLine":18,"endColumn":18},{"ruleId":"181","severity":1,"message":"190","line":30,"column":6,"nodeType":"183","endLine":30,"endColumn":14,"suggestions":"195"},{"ruleId":"185","severity":1,"message":"196","line":18,"column":9,"nodeType":"187","messageId":"188","endLine":18,"endColumn":17},{"ruleId":"185","severity":1,"message":"197","line":19,"column":9,"nodeType":"187","messageId":"188","endLine":19,"endColumn":22},{"ruleId":"185","severity":1,"message":"198","line":20,"column":9,"nodeType":"187","messageId":"188","endLine":20,"endColumn":19},{"ruleId":"185","severity":1,"message":"199","line":2,"column":31,"nodeType":"187","messageId":"188","endLine":2,"endColumn":47},{"ruleId":"185","severity":1,"message":"200","line":1,"column":23,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"201","line":12,"column":10,"nodeType":"187","messageId":"188","endLine":12,"endColumn":20},{"ruleId":"185","severity":1,"message":"202","line":12,"column":22,"nodeType":"187","messageId":"188","endLine":12,"endColumn":31},{"ruleId":"185","severity":1,"message":"203","line":15,"column":8,"nodeType":"187","messageId":"188","endLine":15,"endColumn":11},{"ruleId":"185","severity":1,"message":"204","line":19,"column":9,"nodeType":"187","messageId":"188","endLine":19,"endColumn":12},{"ruleId":"185","severity":1,"message":"205","line":44,"column":13,"nodeType":"187","messageId":"188","endLine":44,"endColumn":21},{"ruleId":"185","severity":1,"message":"206","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":18},{"ruleId":"185","severity":1,"message":"207","line":2,"column":8,"nodeType":"187","messageId":"188","endLine":2,"endColumn":13},{"ruleId":"208","severity":1,"message":"209","line":10,"column":3,"nodeType":"210","messageId":"211","endLine":10,"endColumn":15},{"ruleId":"185","severity":1,"message":"212","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":19},{"ruleId":"185","severity":1,"message":"205","line":9,"column":9,"nodeType":"187","messageId":"188","endLine":9,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["213"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'AuthApi' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["214"],["215"],"'Navigate' is defined but never used.","'resStatus' is assigned a value but never used.",["216"],"'navigate' is assigned a value but never used.","'regexPassword' is assigned a value but never used.","'regexEmail' is assigned a value but never used.","'createHashRouter' is defined but never used.","'PayloadAction' is defined but never used.","'appActions' is defined but never used.","'ErrorType' is defined but never used.","'app' is defined but never used.","'res' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'Dispatch' is defined but never used.","'axios' is defined but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","'RootState' is defined but never used.",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"219","fix":"221"},{"desc":"219","fix":"222"},"Update the dependencies array to be: [dispatch]",{"range":"223","text":"224"},"Update the dependencies array to be: [isAuth, navigate]",{"range":"225","text":"226"},{"range":"227","text":"226"},{"range":"228","text":"226"},[506,508],"[dispatch]",[366,374],"[isAuth, navigate]",[1140,1148],[1189,1197]]